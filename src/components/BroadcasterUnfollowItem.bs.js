// Generated by BUCKLESCRIPT VERSION 5.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("BroadcasterJudgement");

function make(broadcasterObject, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement("div", {
                          className: "card m-3",
                          style: {
                            background: "#660000",
                            width: "25vw"
                          }
                        }, React.createElement("div", {
                              className: "d-flex flex-row"
                            }, React.createElement("img", {
                                  className: "card-img-top",
                                  style: {
                                    border: "3px solid #020202",
                                    height: "100px",
                                    margin: "15px",
                                    width: "100px"
                                  },
                                  alt: "...",
                                  src: broadcasterObject[/* profile_image_url */6]
                                }), React.createElement("h5", {
                                  className: "card-title",
                                  style: {
                                    margin: "40px"
                                  }
                                }, broadcasterObject[/* display_name */2])), React.createElement("div", {
                              className: "card-body d-flex flex-column justify-content-center"
                            }, React.createElement("p", {
                                  className: "card-text"
                                }, "Engagement: 23.12%"), React.createElement("p", {
                                  className: "card-text"
                                }, "Percentage of cold opens: 74.21%"), React.createElement("a", {
                                  className: "btn btn-primary m-3 align-self-end",
                                  style: {
                                    background: "#FF6100",
                                    borderColor: "#FF7D2E",
                                    borderRadius: "0"
                                  },
                                  href: "#"
                                }, "Stats for nerds"), React.createElement("a", {
                                  className: "btn btn-primary m-3 align-self-end",
                                  style: {
                                    background: "#FF6100",
                                    borderColor: "#FF7D2E",
                                    borderRadius: "0"
                                  },
                                  href: "#"
                                }, "Unfollow")));
            }),
          /* initialState */(function (param) {
              return /* record */[
                      /* data */"Lol 4Head",
                      /* advancedStatsShown */false
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (typeof action === "number") {
                return /* Update */Block.__(0, [/* record */[
                            /* data */state[/* data */0],
                            /* advancedStatsShown */!state[/* advancedStatsShown */1]
                          ]]);
              } else if (action.tag) {
                var fetchLocation = action[0];
                return /* SideEffects */Block.__(1, [(function (_self) {
                              console.log("Error, failed to fetch data from " + (fetchLocation + "."));
                              return /* () */0;
                            })]);
              } else {
                return /* Update */Block.__(0, [/* record */[
                            /* data */action[0],
                            /* advancedStatsShown */state[/* advancedStatsShown */1]
                          ]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
